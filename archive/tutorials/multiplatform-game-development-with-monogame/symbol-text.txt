First, locate **Game1.cs** under **MyAwesomeGame.Android** in the *Solution Explorer* window and open it.  WHile this is largely identical to the Game1 class file that was generated by our OpenGl project, there is a small difference.  Notice that starting on line 20 in the constructor, there are various properties being set for the graphics object. 

These are important things to set for our android project so we need to ensure we are still setting them in our shared project.  So close the Game1.cs file, and then locate the **Game1.cs** file under the **MyAwesomeGame.Shared** project.  In here you'll notice that on line 19 in the constructor we already are setting the IsFullScreen property, but we are setting it to `false`.  For Android, we need to set it to `true`.  So how do we resolve this.

Well, this is where the `#if` preprocessor directive comes into play.  If you're not familar with what that is, you can read up on it at https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/preprocessor-directives/preprocessor-if.  Basically though, it allows use to use a *Symbol* to define blocks of code that will only be compile if the symbol exists.  These Symbols are passed to the compiler by our individual platform projects when they are built.  If you right-click on the **MyAwesomeGame.Android** project in the *Solution Explorer* window, select **Properties**, then click **Build** on the left of the *Property Window*, you can see that this project is has a **Conditional compilation symbol** value of **ANDROID**

![android-symbol.png](tutorials/multiplatform-game-development-with-monogame/android-symbol.png)

If you do the same for the **MyAwsomeGame.OpenGL** project, you'll see that it has a **Conditional compilation symbol** value of **LINUX**.  Yep, its value is Linux, that's what the MonoGame team decided to use.  

![linux-symbol.png](tutorials/multiplatform-game-development-with-monogame/linux-symbol.png)

So, we need to use these values to allow different properties to be set in the constructor of Game1.  So, in the **Game1.cs** file for the **MyAwesomeGame.Shared** project, change the constructor to the following

```csharp
        public Game1()
        {
            graphics = new GraphicsDeviceManager(this);
            Content.RootDirectory = "Content";
#if ANDROID
            graphics.IsFullScreen = true;
            graphics.PreferredBackBufferWidth = 800;
            graphics.PreferredBackBufferHeight = 480;
            graphics.SupportedOrientations = DisplayOrientation.LandscapeLeft | DisplayOrientation.LandscapeRight;
#elif LINUX
            graphics.IsFullScreen = false;
            graphics.PreferredBackBufferWidth = 1280;
            graphics.PreferredBackBufferHeight = 720;
#endif
        }
```

When finished, be sure to save the file.

So now, if it is the Android project that is running, only the code for the ANDROID block will be executed.  If it is the OpenGL project that is running, only the LINUX block of code will be executed.  Making use of the `#if` statement will become vital when developing your game as multiplatform.  There will be times, like above, where you need to set some values or do things differently for one platform versus another.